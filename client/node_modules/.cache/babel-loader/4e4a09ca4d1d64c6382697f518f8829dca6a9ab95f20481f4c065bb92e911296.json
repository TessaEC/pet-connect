{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecar\\\\bootcamp\\\\pet-connect\\\\client\\\\src\\\\components\\\\Pet-card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PETS } from \"../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PetCard(_ref) {\n  _s();\n  let {\n    petId,\n    petName,\n    type,\n    breed,\n    age,\n    sex,\n    furColor,\n    status\n  } = _ref;\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  useQuery(QUERY_PETS);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pet-card ${isFlipped ? 'flipped' : ''}`,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: petName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), type === 'dog' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sex: \", sex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Color: \", furColor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(PetCard, \"jJ93ZSlbqllK/cFx/AV48f0uuLU=\", false, function () {\n  return [useQuery];\n});\n_c = PetCard;\nvar _c;\n$RefreshReg$(_c, \"PetCard\");","map":{"version":3,"names":["React","useState","useQuery","QUERY_PETS","jsxDEV","_jsxDEV","PetCard","_ref","_s","petId","petName","type","breed","age","sex","furColor","status","isFlipped","setIsFlipped","handleClick","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","message","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tecar/bootcamp/pet-connect/client/src/components/Pet-card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_PETS } from \"../utils/queries\";\n\nexport default function PetCard({ petId, petName, type, breed, age, sex, furColor, status }) {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\nuseQuery(QUERY_PETS);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div className={`pet-card ${isFlipped ? 'flipped' : ''}`} onClick={handleClick}>\n      <div className=\"card-front\">\n        <p>{status}</p>\n        {/* Add image here using pet.image or any other relevant field */}\n        <div className=\"card-back\">\n          <h3>{petName}</h3>\n          <p>Type: {type}</p>\n          {type === 'dog' ? <p>Breed: {breed}</p> : null}\n          <p>Age: {age}</p>\n          <p>Sex: {sex}</p>\n          <p>Color: {furColor}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}