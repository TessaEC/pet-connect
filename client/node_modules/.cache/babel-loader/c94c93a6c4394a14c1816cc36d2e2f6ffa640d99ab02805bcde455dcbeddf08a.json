{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecar\\\\bootcamp\\\\pet-connect\\\\client\\\\src\\\\components\\\\Pet-card.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetCard = _ref => {\n  let {\n    pet\n  } = _ref;\n  const {\n    name,\n    type,\n    breed,\n    age,\n    sex,\n    furColor,\n    status\n  } = pet;\n  // const [isFlipped, setIsFlipped] = useState(false);\n\n  // const handleClick = () => {\n  //   setIsFlipped(!isFlipped);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pet-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), type === 'dog' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 27\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sex: \", sex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Color: \", furColor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PetCard;\nexport default PetCard;\nvar _c;\n$RefreshReg$(_c, \"PetCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PetCard","_ref","pet","name","type","breed","age","sex","furColor","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tecar/bootcamp/pet-connect/client/src/components/Pet-card.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PetCard = ({ pet }) => {\n  const { name, type, breed, age, sex, furColor, status } = pet;\n  // const [isFlipped, setIsFlipped] = useState(false);\n\n  // const handleClick = () => {\n  //   setIsFlipped(!isFlipped);\n  // };\n\n  return (\n    <div className= 'Pet-card'>\n      <div className=\"card-front\">\n      <p>Status: {status}</p>\n      {/* {will need to add image here } */}\n      <div className=\"card-back\">\n      <h3>{name}</h3>\n        <p>Type: {type}</p>\n        {type === 'dog' ? <p>Breed: {breed}</p> : null}\n        <p>Age: {age}</p>\n        <p>Sex: {sex}</p>\n        <p>Color: {furColor}</p>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PetCard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGC,IAAA,IAAa;EAAA,IAAZ;IAAEC;EAAI,CAAC,GAAAD,IAAA;EACtB,MAAM;IAAEE,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC,GAAG;IAAEC,GAAG;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGP,GAAG;EAC7D;;EAEA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAKW,SAAS,EAAE,UAAU;IAAAC,QAAA,eACxBZ,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3BZ,OAAA;QAAAY,QAAA,GAAG,UAAQ,EAACF,MAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEvBhB,OAAA;QAAKW,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC1BZ,OAAA;UAAAY,QAAA,EAAKR;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACbhB,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACP,IAAI;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAClBX,IAAI,KAAK,KAAK,gBAAGL,OAAA;UAAAY,QAAA,GAAG,SAAO,EAACN,KAAK;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG,IAAI,eAC9ChB,OAAA;UAAAY,QAAA,GAAG,OAAK,EAACL,GAAG;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBhB,OAAA;UAAAY,QAAA,GAAG,OAAK,EAACJ,GAAG;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBhB,OAAA;UAAAY,QAAA,GAAG,SAAO,EAACH,QAAQ;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAC,EAAA,GAxBKhB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}