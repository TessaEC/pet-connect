{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecar\\\\bootcamp\\\\pet-connect\\\\client\\\\src\\\\components\\\\Pet-card.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useQuery } from \"@apollo/client\";\n\n// import { QUERY_PETS } from \"../utils/queries\";\n\n// export default\n//   const { name, type, breed, age, sex, furColor, status } = pet;\n//   const [isFlipped, setIsFlipped] = useState(false);\n\n//   const handleClick = () => {\n//     setIsFlipped(!isFlipped);\n//   };\n\n//   return (\n//     <div className={`pet-card ${isFlipped ? 'flipped' : ''}`} onClick={handleClick}>\n//       <div className=\"card-front\">\n//       <p>{status}</p>\n//       {/* {will need to add image here } */}\n//       <div className=\"card-back\">\n//       <h3>{name}</h3>\n//         <p>Type: {type}</p>\n//         {type === 'dog' ? <p>Breed: {breed}</p> : null}\n//         <p>Age: {age}</p>\n//         <p>Sex: {sex}</p>\n//         <p>Color: {furColor}</p>\n//       </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PetCard;\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PETS } from \"../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PetCard(_ref) {\n  _s();\n  let {\n    petName,\n    type,\n    breed,\n    age,\n    sex,\n    furColor,\n    status\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_PETS);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  const petData = data.pets;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pet-card ${isFlipped ? 'flipped' : ''}`,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: petName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), type === 'dog' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sex: \", sex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Color: \", furColor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(PetCard, \"YyJUFjTuUc7my4QHHRFAD6kFltw=\", false, function () {\n  return [useQuery];\n});\n_c = PetCard;\nvar _c;\n$RefreshReg$(_c, \"PetCard\");","map":{"version":3,"names":["React","useState","useQuery","QUERY_PETS","jsxDEV","_jsxDEV","PetCard","_ref","_s","petName","type","breed","age","sex","furColor","status","loading","error","data","isFlipped","setIsFlipped","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","message","petData","pets","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tecar/bootcamp/pet-connect/client/src/components/Pet-card.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useQuery } from \"@apollo/client\";\n\n// import { QUERY_PETS } from \"../utils/queries\";\n\n// export default\n//   const { name, type, breed, age, sex, furColor, status } = pet;\n//   const [isFlipped, setIsFlipped] = useState(false);\n\n//   const handleClick = () => {\n//     setIsFlipped(!isFlipped);\n//   };\n\n//   return (\n//     <div className={`pet-card ${isFlipped ? 'flipped' : ''}`} onClick={handleClick}>\n//       <div className=\"card-front\">\n//       <p>{status}</p>\n//       {/* {will need to add image here } */}\n//       <div className=\"card-back\">\n//       <h3>{name}</h3>\n//         <p>Type: {type}</p>\n//         {type === 'dog' ? <p>Breed: {breed}</p> : null}\n//         <p>Age: {age}</p>\n//         <p>Sex: {sex}</p>\n//         <p>Color: {furColor}</p>\n//       </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PetCard;\n\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_PETS } from \"../utils/queries\";\n\nexport default function PetCard({ petName, type, breed, age, sex, furColor, status }) {\n  const { loading, error, data } = useQuery(QUERY_PETS);\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  const petData = data.pets;\n\n  return (\n    <div className={`pet-card ${isFlipped ? 'flipped' : ''}`} onClick={handleClick}>\n      <div className=\"card-front\">\n      <p>{status}</p>\n      {/* {will need to add image here } */}\n      <div className=\"card-back\">\n      <h3>{petName}</h3>\n        <p>Type: {type}</p>\n        {type === 'dog' ? <p>Breed: {breed}</p> : null}\n        <p>Age: {age}</p>\n        <p>Sex: {sex}</p>\n        <p>Color: {furColor}</p>\n      </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}